
/// <auto-generated />
using LMobile.Gida;
namespace LMobile.Gen3LicenseManagement.Dao.Mapping {
	public partial class StoredModuleMapping : StoredObjectMapping {
		public readonly global::LMobile.Gida.GidaColumnMapping ProjectType;
		public readonly global::LMobile.Gida.GidaColumnMapping ModuleGuid;
		public readonly global::LMobile.Gida.GidaColumnMapping ModuleName;
		public readonly global::LMobile.Gida.GidaColumnMapping Description;
		public readonly global::LMobile.Gida.GidaColumnMapping IsActive;
		public StoredModuleMapping(global::LMobile.Gida.GidaSession session)
			: base(session, "Module") {
			this.OnConstructing();
			var define = this.Define<global::LMobile.Gen3LicenseManagement.Dao.BusinessObjects.StoredModule>();
			this.ProjectType = define.Column("ProjectType", 32, o => o.ProjectType, (o, value) => o.ProjectType = value);
			this.ModuleGuid = define.Column("ModuleGuid", o => o.ModuleGuid, (o, value) => o.ModuleGuid = value);
			this.ModuleName = define.Column("ModuleName", 32, o => o.ModuleName, (o, value) => o.ModuleName = value);
			this.Description = define.Column("Desription", 64, o => o.Description, (o, value) => o.Description = value);
			this.IsActive = define.Column("IsActive", o => o.IsActive, (o, value) => o.IsActive = value);
			this.OnConstructed();
		}
		protected override void DefineSchema(GidaTableMappingSchemaDefinition define) {
			base.DefineSchema(define);
			define.UniqueIndex("Module_I1", this.ModuleGuid);
			define.UniqueIndex("Module_UK1", this.ModuleName);
			define.ForeignKey<StoredProjectTypeMapping>("Module_FK2", (f, add) => add.Column(this.ProjectType, f.ProjectType));
		}
		partial void OnConstructing();
		partial void OnConstructed();
	}
}
