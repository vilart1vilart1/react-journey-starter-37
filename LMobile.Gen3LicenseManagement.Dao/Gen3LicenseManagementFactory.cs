/// <auto-generated />

using LMobile.Gen3LicenseManagement.Dao.Contracts;
using LMobile.Gen3LicenseManagement.Dao.Services;
using LMobile.Gida.SqlServer;
using LMobile.Gida;

namespace LMobile.Gen3LicenseManagement.Dao {
	public partial class Gen3LicenseManagementFactory : global::LMobile.Gida.GidaFactory {
		public Gen3LicenseManagementFactory(global::LMobile.Gida.GidaConnector connector)
			: base(connector) {
			this.SetConnectorOptions(SqlServerConnectorOptions.UseDateTime2);

			this.OnConstructing();
			//this.RegisterMapping<BusinessObjects.AspnetApplications, Mapping.AspnetApplicationsMapping>(session => new Mapping.AspnetApplicationsMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetMembership, Mapping.AspnetMembershipMapping>(session => new Mapping.AspnetMembershipMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetPaths, Mapping.AspnetPathsMapping>(session => new Mapping.AspnetPathsMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetPersonalizationAllUsers, Mapping.AspnetPersonalizationAllUsersMapping>(session => new Mapping.AspnetPersonalizationAllUsersMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetPersonalizationPerUser, Mapping.AspnetPersonalizationPerUserMapping>(session => new Mapping.AspnetPersonalizationPerUserMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetProfile, Mapping.AspnetProfileMapping>(session => new Mapping.AspnetProfileMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetRoles, Mapping.AspnetRolesMapping>(session => new Mapping.AspnetRolesMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetSchemaVersions, Mapping.AspnetSchemaVersionsMapping>(session => new Mapping.AspnetSchemaVersionsMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetUsers, Mapping.AspnetUsersMapping>(session => new Mapping.AspnetUsersMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetUsersInRoles, Mapping.AspnetUsersInRolesMapping>(session => new Mapping.AspnetUsersInRolesMapping(session));
			//this.RegisterMapping<BusinessObjects.AspnetWebEventEvents, Mapping.AspnetWebEventEventsMapping>(session => new Mapping.AspnetWebEventEventsMapping(session));
			this.RegisterMapping<BusinessObjects.StoredCustomer, Mapping.StoredCustomerMapping>(session => new Mapping.StoredCustomerMapping(session));
			this.RegisterMapping<BusinessObjects.StoredProject, Mapping.StoredProjectMapping>(session => new Mapping.StoredProjectMapping(session));
			this.RegisterMapping<BusinessObjects.StoredInstallation, Mapping.StoredInstallationMapping>(session => new Mapping.StoredInstallationMapping(session));
			this.RegisterMapping<BusinessObjects.StoredProjectType, Mapping.StoredProjectTypeMapping>(session => new Mapping.StoredProjectTypeMapping(session));
			this.RegisterMapping<BusinessObjects.StoredInstallationType, Mapping.StoredInstallationTypeMapping>(session => new Mapping.StoredInstallationTypeMapping(session));
			this.RegisterMapping<BusinessObjects.StoredProjectLog, Mapping.StoredProjectLogMapping>(session => new Mapping.StoredProjectLogMapping(session));
			this.RegisterMapping<BusinessObjects.StoredModule, Mapping.StoredModuleMapping>(session => new Mapping.StoredModuleMapping(session));
			this.RegisterMapping<BusinessObjects.StoredModuleProperty, Mapping.StoredModulePropertyMapping>(session => new Mapping.StoredModulePropertyMapping(session));
			this.RegisterMapping<BusinessObjects.StoredModulePropertiesInModules, Mapping.StoredModulePropertiesInModulesMapping>(session => new Mapping.StoredModulePropertiesInModulesMapping(session));
			this.RegisterMapping<BusinessObjects.StoredProjectModuleProperty, Mapping.StoredProjectModulePropertyMapping>(session => new Mapping.StoredProjectModulePropertyMapping(session));
			this.RegisterMapping<BusinessObjects.StoredDeveloper, Mapping.StoredDeveloperMapping>(session => new Mapping.StoredDeveloperMapping(session));

			this.RegisterMapping<BusinessObjects.Customer, Mapping.CustomerMapping>(session => new Mapping.CustomerMapping(session));
			this.RegisterMapping<BusinessObjects.Project, Mapping.ProjectMapping>(session => new Mapping.ProjectMapping(session));
			this.RegisterMapping<BusinessObjects.Installation, Mapping.InstallationMapping>(session => new Mapping.InstallationMapping(session));
			this.RegisterMapping<BusinessObjects.Module, Mapping.ModuleMapping>(session => new Mapping.ModuleMapping(session));
			this.RegisterMapping<BusinessObjects.ModuleProperty, Mapping.ModulePropertyMapping>(session => new Mapping.ModulePropertyMapping(session));
			this.RegisterMapping<BusinessObjects.ModulePropertiesInModules, Mapping.ModulePropertiesInModulesMapping>(session => new Mapping.ModulePropertiesInModulesMapping(session));
			this.RegisterMapping<BusinessObjects.ProjectModuleProperty, Mapping.ProjectModulePropertyMapping>(session => new Mapping.ProjectModulePropertyMapping(session));

			this.RegisterMapping<BusinessObjects.ProjectLog, Mapping.ProjectLogMapping>(session => new Mapping.ProjectLogMapping(session));

			this.RegisterService<ILicenseDao>(session => new LicenseDao(session));
			this.RegisterService<IModuleDao>(session => new ModuleDao(session));
			this.RegisterService<IDeveloperDao>(session => new DeveloperDao(session));
			this.OnConstructed();
		}
		partial void OnConstructing();
		partial void OnConstructed();
	}
}
